
language: android
env:
  global:
    - CODECOV_TOKEN="5b079757-ba77-4746-bf56-2108e717521f"
    - ANDROID_TARGET=android-22
    - ANDROID_ABI=armeabi-v7a
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-27.0.3
    - build-tools-28.0.3

    # The SDK version used to compile your project
    - android-26

  licenses:
    - 'android-sdk-license-.+'

before_script:
    - chmod +x gradlew

jobs:
    include:
        # Put your unit tests here 
        - stage: Unit tests
          name: Release 1
          script: 
            - ./gradlew -p app/src/androidTest/java/de/test/antennapod/fontStyleTest
        #The order is ok from https://docs.travis-ci.com/user/build-stages/#naming-your-jobs-within-build-stages, first is script then name
        #Uncomment below when unit tests are ready to integrate to travis
        #  script:
        #Put unit tests for release 2 here, follow the format from release 1.
        #  name: Release 2
        #  script: 
        #Release 3 unit tests
        #  name: Release 3
        #Put your UI tests here
        - stage: UI tests
          name: Release 1
          script: 
            - ./gradlew -p app/src/androidTest/java/de/test/antennapod/espresso/fontStyle
            - ./gradlew -p app/src/androidTest/java/de/test/antennapod/espresso/themeTest
            - ./gradlew -p app/src/androidTest/java/de/test/antennapod/espresso/discoveryPage
        #The order is ok from https://docs.travis-ci.com/user/build-stages/#naming-your-jobs-within-build-stages, first is script then name
        #Uncomment below when UI tests are ready to integrate to travis
        #  script:
        #Put your UI tests for release 2 here, follor the format from release 1.
        #  name: Release 2
        #  script:
        #  #Release 3 UI tests
        #  name: Release 3
        - stage: Code Coverage
          script:
          - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
          - emulator -avd test -no-skin -no-audio -no-window &
          - android-wait-for-emulator
          - adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
          - ./gradlew clean createPlayDebugCoverageRepor
after_success:
  - bash <(curl -s https://codecov.io/bash)
